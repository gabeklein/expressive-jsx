// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`alternate consequent types 1`] = `
"({
  foo
}) => create(\\"div\\", {
  className: use(\\"element_26b\\", !!foo && \\"if_foo_6ac\\")
}, !foo && create(\\"div\\", {}, \\"Foo is false\\"));

css(\`
	/* 5 */
	.element_26b.if_foo_6ac { color: red }
\`);"
`;

exports[`alternate consequent types 2`] = `
"({
  foo
}) => <div className={use(\\"element_26b\\", !!foo && \\"if_foo_6ac\\")}>{!foo && <div>Foo is false</div>}</div>;

css(\`
	/* 5 */
	.element_26b.if_foo_6ac { color: red }
\`);"
`;

exports[`basic switch 1`] = `
"({
  hello
}) => hello ? create(\\"div\\", {}, \\"Hello World\\") : create(\\"div\\", {}, \\"Goodbye World\\");"
`;

exports[`basic switch 2`] = `
"({
  hello
}) => hello ? <div>Hello World</div> : <div>Goodbye World</div>;"
`;

exports[`delegated variant may still contain style 1`] = `
"const BuyButton = ({
  active
}) => create(\\"div\\", {
  className: use(\\"example_6a2\\", active ? \\"if_active_2df exampleActive_fbb\\" : \\"else_392\\")
}, \\"Hello World!\\");

css(\`
	/* 5 */
	.example_6a2.else_392 { color: green }
	.example_6a2.if_active_2df { background: white }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`delegated variant may still contain style 2`] = `
"const BuyButton = ({
  active
}) => <div className={use(\\"example_6a2\\", active ? \\"if_active_2df exampleActive_fbb\\" : \\"else_392\\")}>Hello World!</div>;

css(\`
	/* 5 */
	.example_6a2.else_392 { color: green }
	.example_6a2.if_active_2df { background: white }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`delegates definition via use 1`] = `
"const BuyButton = ({
  active
}) => create(\\"div\\", {
  className: use(\\"example_6a2 example_p5t\\", active ? \\"exampleActive_fbb\\" : \\"else_392\\")
}, \\"Hello World!\\");

css(\`
	/* 2 */
	.example_p5t { color: black }
	/* 5 */
	.example_6a2.else_392 { color: green }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`delegates definition via use 2`] = `
"const BuyButton = ({
  active
}) => <div className={use(\\"example_6a2 example_p5t\\", active ? \\"exampleActive_fbb\\" : \\"else_392\\")}>Hello World!</div>;

css(\`
	/* 2 */
	.example_p5t { color: black }
	/* 5 */
	.example_6a2.else_392 { color: green }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`inverse consequent types 1`] = `
"({
  foo
}) => create(\\"div\\", {
  className: use(\\"element_26b\\", !foo && \\"else_16j\\")
}, !!foo && create(\\"div\\", {}, \\"Foo is true\\"));

css(\`
	/* 5 */
	.element_26b.else_16j { color: red }
\`);"
`;

exports[`inverse consequent types 2`] = `
"({
  foo
}) => <div className={use(\\"element_26b\\", !foo && \\"else_16j\\")}>{!!foo && <div>Foo is true</div>}</div>;

css(\`
	/* 5 */
	.element_26b.else_16j { color: red }
\`);"
`;

exports[`nested elements may have conditional 1`] = `
"const BuyButton = ({
  active
}) => create(\\"div\\", {}, create(\\"div\\", {}, create(\\"div\\", {
  className: use(\\"inner_1mn\\", active ? \\"if_active_3ef\\" : \\"else_27p\\")
})));

css(\`
	/* 5 */
	.inner_1mn.else_27p { color: green }
	.inner_1mn.if_active_3ef { color: red }
\`);"
`;

exports[`nested elements may have conditional 2`] = `
"const BuyButton = ({
  active
}) => <div><div><div className={use(\\"inner_1mn\\", active ? \\"if_active_3ef\\" : \\"else_27p\\")} /></div></div>;

css(\`
	/* 5 */
	.inner_1mn.else_27p { color: green }
	.inner_1mn.if_active_3ef { color: red }
\`);"
`;

exports[`supports complex else-if 1`] = `
"({
  foo,
  bar
}) => create(\\"div\\", {
  className: use(\\"element_26b\\", !foo && !bar && \\"else_6jg\\")
}, foo ? create(\\"div\\", {}, \\"Foo is true\\") : !!bar && create(\\"div\\", {}, \\"Bar is true\\"));

css(\`
	/* 5 */
	.element_26b.else_6jg { color: red }
\`);"
`;

exports[`supports complex else-if 2`] = `
"({
  foo,
  bar
}) => <div className={use(\\"element_26b\\", !foo && !bar && \\"else_6jg\\")}>{foo ? <div>Foo is true</div> : !!bar && <div>Bar is true</div>}</div>;

css(\`
	/* 5 */
	.element_26b.else_6jg { color: red }
\`);"
`;

exports[`supports inverse else-if 1`] = `
"({
  foo,
  bar
}) => create(\\"div\\", {
  className: use(\\"element_26b\\", foo ? \\"if_foo_6ac\\" : !!bar && \\"if_bar_16j\\")
}, !foo && !bar && create(\\"div\\", {}, \\"Foo & Bar are false\\"));

css(\`
	/* 5 */
	.element_26b.if_bar_16j { color: blue }
	.element_26b.if_foo_6ac { color: red }
\`);"
`;

exports[`supports inverse else-if 2`] = `
"({
  foo,
  bar
}) => <div className={use(\\"element_26b\\", foo ? \\"if_foo_6ac\\" : !!bar && \\"if_bar_16j\\")}>{!foo && !bar && <div>Foo & Bar are false</div>}</div>;

css(\`
	/* 5 */
	.element_26b.if_bar_16j { color: blue }
	.element_26b.if_foo_6ac { color: red }
\`);"
`;

exports[`switch can provide style downstream 1`] = `
"() => create(\\"div\\", {
  className: use(\\"element_26b\\", !!true && \\"opt1_6ac\\")
}, create(\\"div\\", {
  className: \\"foo_5rg\\"
}), create(\\"div\\", {
  className: \\"bar_193\\"
}));

css(\`
	/* 4 */
	.element_26b.opt1_6ac .foo_5rg { color: red }
	.element_26b.opt1_6ac .bar_193 { color: blue }
\`);"
`;

exports[`switch can provide style downstream 2`] = `
"() => <div className={use(\\"element_26b\\", !!true && \\"opt1_6ac\\")}><div className=\\"foo_5rg\\" /><div className=\\"bar_193\\" /></div>;

css(\`
	/* 4 */
	.element_26b.opt1_6ac .foo_5rg { color: red }
	.element_26b.opt1_6ac .bar_193 { color: blue }
\`);"
`;

exports[`switch styles 1`] = `
"({
  foo
}) => create(\\"div\\", {
  className: use(\\"element_26b\\", foo ? \\"if_foo_6ac\\" : \\"else_16j\\")
});

css(\`
	/* 5 */
	.element_26b.else_16j { color: blue }
	.element_26b.if_foo_6ac { color: red }
\`);"
`;

exports[`switch styles 2`] = `
"({
  foo
}) => <div className={use(\\"element_26b\\", foo ? \\"if_foo_6ac\\" : \\"else_16j\\")} />;

css(\`
	/* 5 */
	.element_26b.else_16j { color: blue }
	.element_26b.if_foo_6ac { color: red }
\`);"
`;
