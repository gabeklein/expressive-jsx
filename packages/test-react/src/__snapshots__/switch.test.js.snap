// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`alternate consequent types 1`] = `
"({
  foo
}) => create(\\"div\\", {
  className: !!foo && \\"element_3ld\\"
}, !foo && create(\\"div\\", {}, \\"Foo is false\\"));

css(\`
	/* 5 */
	.element_3ld { color: red }
\`);"
`;

exports[`alternate consequent types 2`] = `
"({
  foo
}) => <div className={!!foo && \\"element_3ld\\"}>{!foo && <div>Foo is false</div>}</div>;

css(\`
	/* 5 */
	.element_3ld { color: red }
\`);"
`;

exports[`basic switch 1`] = `
"({
  hello
}) => hello ? create(\\"div\\", {}, \\"Hello World\\") : create(\\"div\\", {}, \\"Goodbye World\\");"
`;

exports[`basic switch 2`] = `
"({
  hello
}) => hello ? <div>Hello World</div> : <div>Goodbye World</div>;"
`;

exports[`handle both children and styles 1`] = `
"() => {
  <conatiner />;
  return create(\\"div\\", {
    className: use(\\"element_7nq\\", !true && \\"element_58b\\")
  }, true ? create(\\"switch-true\\", {}) : create(\\"switch-false\\", {}), create(\\"div\\", {}));
};

css(\`
	/* 1 */
	.element_7nq { color: red }
	/* 5 */
	.element_58b { color: green }
\`);"
`;

exports[`handle both children and styles 2`] = `
"() => {
  <conatiner />;
  return <div className={use(\\"element_7nq\\", !true && \\"element_58b\\")}>{true ? <switch-true /> : <switch-false />}<div /></div>;
};

css(\`
	/* 1 */
	.element_7nq { color: red }
	/* 5 */
	.element_58b { color: green }
\`);"
`;

exports[`inverse consequent types 1`] = `
"({
  foo
}) => create(\\"div\\", {
  className: !foo && \\"element_58b\\"
}, !!foo && create(\\"div\\", {}, \\"Foo is true\\"));

css(\`
	/* 5 */
	.element_58b { color: red }
\`);"
`;

exports[`inverse consequent types 2`] = `
"({
  foo
}) => <div className={!foo && \\"element_58b\\"}>{!!foo && <div>Foo is true</div>}</div>;

css(\`
	/* 5 */
	.element_58b { color: red }
\`);"
`;

exports[`nested elements may have conditional 1`] = `
"const BuyButton = ({
  active
}) => create(\\"div\\", {}, create(\\"div\\", {}, create(\\"div\\", {
  className: active ? \\"inner_sds\\" : \\"inner_1nj\\"
})));

css(\`
	/* 5 */
	.inner_1nj { color: green }
	.inner_sds { color: red }
\`);"
`;

exports[`nested elements may have conditional 2`] = `
"const BuyButton = ({
  active
}) => <div><div><div className={active ? \\"inner_sds\\" : \\"inner_1nj\\"} /></div></div>;

css(\`
	/* 5 */
	.inner_1nj { color: green }
	.inner_sds { color: red }
\`);"
`;

exports[`supports complex else-if 1`] = `
"({
  foo,
  bar
}) => create(\\"div\\", {
  className: !foo && !bar && \\"element_2l4\\"
}, foo ? create(\\"div\\", {}, \\"Foo is true\\") : !!bar && create(\\"div\\", {}, \\"Bar is true\\"));

css(\`
	/* 5 */
	.element_2l4 { color: red }
\`);"
`;

exports[`supports complex else-if 2`] = `
"({
  foo,
  bar
}) => <div className={!foo && !bar && \\"element_2l4\\"}>{foo ? <div>Foo is true</div> : !!bar && <div>Bar is true</div>}</div>;

css(\`
	/* 5 */
	.element_2l4 { color: red }
\`);"
`;

exports[`supports inverse else-if 1`] = `
"({
  foo,
  bar
}) => create(\\"div\\", {
  className: foo ? \\"element_3ld\\" : !!bar && \\"element_58b\\"
}, !foo && !bar && create(\\"div\\", {}, \\"Foo & Bar are false\\"));

css(\`
	/* 5 */
	.element_58b { color: blue }
	.element_3ld { color: red }
\`);"
`;

exports[`supports inverse else-if 2`] = `
"({
  foo,
  bar
}) => <div className={foo ? \\"element_3ld\\" : !!bar && \\"element_58b\\"}>{!foo && !bar && <div>Foo & Bar are false</div>}</div>;

css(\`
	/* 5 */
	.element_58b { color: blue }
	.element_3ld { color: red }
\`);"
`;

exports[`switch can provide style downstream 1`] = `
"() => create(\\"div\\", {
  className: !!true && \\"element_3ld\\"
}, create(\\"div\\", {
  className: \\"foo_7ku\\"
}), create(\\"div\\", {
  className: \\"bar_31q\\"
}));

css(\`
	/* 5 */
	.element_3ld .foo_7ku { color: red }
	.element_3ld .bar_31q { color: blue }
\`);"
`;

exports[`switch can provide style downstream 2`] = `
"() => <div className={!!true && \\"element_3ld\\"}><div className=\\"foo_7ku\\" /><div className=\\"bar_31q\\" /></div>;

css(\`
	/* 5 */
	.element_3ld .foo_7ku { color: red }
	.element_3ld .bar_31q { color: blue }
\`);"
`;

exports[`switch styles 1`] = `
"({
  foo
}) => {
  if (foo) color: red;else color: blue;
};"
`;

exports[`switch styles 2`] = `
"({
  foo
}) => {
  if (foo) color: red;else color: blue;
};"
`;
