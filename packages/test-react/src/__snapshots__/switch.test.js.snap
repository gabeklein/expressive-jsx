// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`alternate consequent types 1`] = `
"({
  foo
}) => create(\\"div\\", {
  \\"className\\": !!foo && \\"if_foo_6bf\\"
}, !foo && create(\\"div\\", {}, \\"Foo is false\\"));

Styles.include(\`
	.element_26b.if_foo_6bf { color: red }
\`);"
`;

exports[`alternate consequent types 2`] = `
"({
  foo
}) => <div className={!!foo && \\"if_foo_6bf\\"}>{!foo && <div>Foo is false</div>}</div>;

Styles.include(\`
	.element_26b.if_foo_6bf { color: red }
\`);"
`;

exports[`basic switch 1`] = `
"({
  hello
}) => hello ? create(\\"div\\", {}, \\"Hello World\\") : create(\\"div\\", {}, \\"Goodbye World\\");"
`;

exports[`basic switch 2`] = `
"({
  hello
}) => hello ? <div>Hello World</div> : <div>Goodbye World</div>;"
`;

exports[`delegated variant may still contain style 1`] = `
"const BuyButton = ({
  active
}) => create(\\"div\\", {
  \\"className\\": active ? \\"if_active_30b exampleActive_fbb\\" : \\"else_122\\"
}, \\"Hello World!\\");

Styles.include(\`
	.example_6a2.else_122 { color: green }
	.example_6a2.if_active_30b { background: white }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`delegated variant may still contain style 2`] = `
"const BuyButton = ({
  active
}) => <div className={active ? \\"if_active_30b exampleActive_fbb\\" : \\"else_122\\"}>Hello World!</div>;

Styles.include(\`
	.example_6a2.else_122 { color: green }
	.example_6a2.if_active_30b { background: white }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`delegates definition via use 1`] = `
"const BuyButton = ({
  active
}) => create(\\"div\\", {
  \\"className\\": join(\\"example_14k\\", active ? \\"exampleActive_fbb\\" : \\"else_122\\")
}, \\"Hello World!\\");

Styles.include(\`
	.example_14k { color: black }
	.example_6a2.else_122 { color: green }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`delegates definition via use 2`] = `
"const BuyButton = ({
  active
}) => <div className={join(\\"example_14k\\", active ? \\"exampleActive_fbb\\" : \\"else_122\\")}>Hello World!</div>;

Styles.include(\`
	.example_14k { color: black }
	.example_6a2.else_122 { color: green }
	.exampleActive_fbb { color: blue }
\`);"
`;

exports[`inverse consequent types 1`] = `
"({
  foo
}) => create(\\"div\\", {
  \\"className\\": !foo && \\"else_i3g\\"
}, !!foo && create(\\"div\\", {}, \\"Foo is true\\"));

Styles.include(\`
	.element_26b.else_i3g { color: red }
\`);"
`;

exports[`inverse consequent types 2`] = `
"({
  foo
}) => <div className={!foo && \\"else_i3g\\"}>{!!foo && <div>Foo is true</div>}</div>;

Styles.include(\`
	.element_26b.else_i3g { color: red }
\`);"
`;

exports[`nested elements may have conditional 1`] = `
"const BuyButton = ({
  active
}) => create(\\"div\\", {}, create(\\"div\\", {}, create(\\"div\\", {
  \\"className\\": active ? \\"if_active_lr4\\" : \\"else_1kq\\"
})));

Styles.include(\`
	.inner_1mn.else_1kq { color: green }
	.inner_1mn.if_active_lr4 { color: red }
\`);"
`;

exports[`nested elements may have conditional 2`] = `
"const BuyButton = ({
  active
}) => <div><div><div className={active ? \\"if_active_lr4\\" : \\"else_1kq\\"} /></div></div>;

Styles.include(\`
	.inner_1mn.else_1kq { color: green }
	.inner_1mn.if_active_lr4 { color: red }
\`);"
`;

exports[`supports complex else-if 1`] = `
"({
  foo,
  bar
}) => create(\\"div\\", {
  \\"className\\": !foo && !bar && \\"else_7cl\\"
}, foo ? create(\\"div\\", {}, \\"Foo is true\\") : !!bar && create(\\"div\\", {}, \\"Bar is true\\"));

Styles.include(\`
	.element_26b.else_7cl { color: red }
\`);"
`;

exports[`supports complex else-if 2`] = `
"({
  foo,
  bar
}) => <div className={!foo && !bar && \\"else_7cl\\"}>{foo ? <div>Foo is true</div> : !!bar && <div>Bar is true</div>}</div>;

Styles.include(\`
	.element_26b.else_7cl { color: red }
\`);"
`;

exports[`supports inverse else-if 1`] = `
"({
  foo,
  bar
}) => create(\\"div\\", {
  \\"className\\": foo ? \\"if_foo_6bf\\" : !!bar && \\"if_bar_i3g\\"
}, !foo && !bar && create(\\"div\\", {}, \\"Foo & Bar are false\\"));

Styles.include(\`
	.element_26b.if_bar_i3g { color: blue }
	.element_26b.if_foo_6bf { color: red }
\`);"
`;

exports[`supports inverse else-if 2`] = `
"({
  foo,
  bar
}) => <div className={foo ? \\"if_foo_6bf\\" : !!bar && \\"if_bar_i3g\\"}>{!foo && !bar && <div>Foo & Bar are false</div>}</div>;

Styles.include(\`
	.element_26b.if_bar_i3g { color: blue }
	.element_26b.if_foo_6bf { color: red }
\`);"
`;

exports[`switch styles 1`] = `
"({
  foo
}) => create(\\"div\\", {
  \\"className\\": foo ? \\"if_foo_6bf\\" : \\"else_i3g\\"
});

Styles.include(\`
	.element_26b.else_i3g { color: blue }
	.element_26b.if_foo_6bf { color: red }
\`);"
`;

exports[`switch styles 2`] = `
"({
  foo
}) => <div className={foo ? \\"if_foo_6bf\\" : \\"else_i3g\\"} />;

Styles.include(\`
	.element_26b.else_i3g { color: blue }
	.element_26b.if_foo_6bf { color: red }
\`);"
`;
