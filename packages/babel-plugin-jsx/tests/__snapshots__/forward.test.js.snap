// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`forward className 1`] = `
  ({ className }) => (
    <div className={className}>
      <div>Hello World</div>
    </div>
  );
`;

exports[`forward react ref 1`] = `
  forwardRef(({ active }, ref) => (
    <input
      disabled={!active}
      ref={ref}
      type="text"
      className="input_70c"
    />
  ));
  
  css(\`
  	.input_70c {
  		color: red;
  	}
  \`);
`;

exports[`forward will join with existing styles 1`] = `
  ({ className }) => (
    <div className={classNames("element_7nq", className)}>
      <div>Hello World</div>
    </div>
  );
  
  css(\`
  	.element_7nq {
  		color: red;
  	}
  \`);
`;

exports[`forward will not break where ...rest exists 1`] = `
  ({ className, name, ...rest }) => (
    <div className={className}>
      <div {...rest}>Hello {name}</div>
    </div>
  );
`;

exports[`forward will pull className from declared destructure 1`] = `
  (props) => {
    const { className, name } = props;
  
    return (
      <div className={className}>
        <div>Hello {name}</div>
      </div>
    );
  };
`;

exports[`forward will pull className from existing destructure 1`] = `
  ({ className, name }) => (
    <div className={className}>
      <div>Hello {name}</div>
    </div>
  );
`;

exports[`forward will pull className from existing props 1`] = `
  (props) => {
    const { className } = props;
  
    return (
      <div className={className}>
        <div>Hello World</div>
      </div>
    );
  };
`;
